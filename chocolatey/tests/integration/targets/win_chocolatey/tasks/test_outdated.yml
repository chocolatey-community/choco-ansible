- name: "install old version of {{ test_choco_package1 }} package"
  win_chocolatey:
    name: '{{ test_choco_package1 }}'
    state: present
    version: 0.0.1
    force: yes

- block:
  - name: Gather facts from chocolatey
    win_chocolatey_facts:

    #  "outdated": [
    #       {
    #           "available_version": "0.1.0",
    #           "current_version": "0.0.1",
    #           "package": "ansible",
    #           "pinned": false
    #       },

  - name: set_fact selected_package
    set_fact:
      selected_package: "{{ ansible_chocolatey.outdated | selectattr( 'package', 'eq', test_choco_package1 )}} "

  - name: Debug selected_package
    debug:
      var: selected_package

  - name: assert 'chocolatey outdated' facts
    assert:
      that:
      - ansible_chocolatey is not changed
      - ansible_chocolatey.outdated is defined
      - selected_package[0] is defined
      - selected_package[1] is not defined
      - selected_package[0].current_version == '0.0.1'
      - selected_package[0].available_version == '0.1.0'
      - selected_package[0].pinned == false

- block:
  - name: "Update {{ test_choco_package1 }} package"
    win_chocolatey:
      name: '{{ test_choco_package1 }}'
      state: latest

  - name: Gather facts from chocolatey
    win_chocolatey_facts:

  - name: set_fact selected_package
    set_fact:
      selected_package: "{{ ansible_chocolatey.outdated | selectattr( 'package', 'eq', test_choco_package1 )}} "

  - name: Debug selected_package
    debug:
      var: selected_package

  - name: assert 'chocolatey outdated' facts
    assert:
      that:
      - ansible_chocolatey.outdated is defined
      - selected_package[0] is not defined

  always:
  - name: "Clean up after 'chocolatey outdated' tests. Remove {{ test_choco_package1 }} package"
    win_chocolatey:
      name: '{{ test_choco_package1 }}'
      state: absent
